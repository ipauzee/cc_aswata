/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Search_ticket.java
 *
 * Created on Feb 23, 2010, 4:31:41 PM
 */

package cc_aswata;


import java.awt.*;
import java.awt.event.*;
import java.awt.Event.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.JOptionPane;
/**
 *
 * @author jsm
 */
public class ccasw_Search_Claim extends javax.swing.JFrame {
    private static String cus[]=new String[21];
    private static String condition,branchid,cobid;
    public static int Form=0,wsid=1,wsid1=1,wsstt=0;
    public static boolean ws=false,ws1=false;
    Timer wsws;
    /** Creates new form Search_ticket */
    public ccasw_Search_Claim() {
        initComponents();
        tblcus.setModel(tabcus);
        tabcus.setRowCount(0);
        tbcus(tblcus,new int []{40,200,150,150,120,150,100,120});
        setLocation(0,330);
//        new Timer(1000, wsinbound).start();
        wsws=new Timer(1000, wsinbound);
        branch();cob();
    }

    public static ContactCenterASWATA CCanj;
    public ccasw_Search_Claim(ContactCenterASWATA ccanj){
        this();
        this.CCanj=ccanj;
    }
    private ccasw_ticket Tic;
    public ccasw_Search_Claim(ccasw_ticket tic){
        this();
        this.Tic=tic;
    }
    private ccasw_InBoundCall Inc;
    public ccasw_Search_Claim(ccasw_InBoundCall inc){
        this();
        this.Inc=inc;
    }
    public ccasw_Sms_income Sin;
    public ccasw_Search_Claim(ccasw_Sms_income sin){
        this();
        this.Sin=sin;
    }
    public ccasw_Email_incoming Ein;
    public ccasw_Search_Claim(ccasw_Email_incoming ein){
        this();
        this.Ein=ein;
    }
    private ccasw_ProgressBar Prg;
    public ccasw_Search_Claim(ccasw_ProgressBar prg){
        this();
        this.Prg=prg;
    }

    public static javax.swing.table.DefaultTableModel getDefaultTabelcus(){
        return new javax.swing.table.DefaultTableModel(
                new Object [][]{},
                new String [] {"No.","Insured Name","Policy No","Registration No","Registration Date","Reported By","Phone No","Status Claim"}){
                boolean[] canEdit=new boolean[]{
                    false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false
                };
                public boolean isCellEditable(int rowIndex, int columnIndex){
                        return canEdit[columnIndex];
                }
        };
    }
    public static javax.swing.table.DefaultTableModel tabcus=getDefaultTabelcus();
    public static void tabelcus(){
        tabcus.setRowCount(0);
        try{
            sql="select *, _ws_status_claim.data as stt"
                    + " from ws_search_claim_registration"
                    + " left join _ws_status_claim on ws_search_claim_registration.status_claim=_ws_status_claim.code"
                    + " where request_id="+wsid+" ";
            rs=CCanj.jconn.SQLExecuteRS(sql, CCanj.conn);
            System.out.println(sql);

            while(rs.next()){
                cus[0]=rs.getString("no");
                cus[1]=rs.getString("insured_name");
                cus[2]=rs.getString("policy_no");
                cus[3]=rs.getString("registrtation_no");
                cus[4]=rs.getString("registrtation_date");
                cus[5]=rs.getString("reported_by");
                cus[6]=rs.getString("phone_no");
                cus[7]=rs.getString("stt");
                tabcus.addRow(cus);
            }
//            sql1="delete from ws_search_customer where request_id="+wsid+" ";
            CCanj.jconn.SQLExecute(sql1, CCanj.conn);
        }catch(Exception exc){
            System.err.println(exc.getMessage());
        }
    }
    private void tbcus(javax.swing.JTable tb, int lebar[]){
        tb.setAutoResizeMode(tb.AUTO_RESIZE_OFF);
        int kolom=tb.getColumnCount();
        for (int i=0;i<kolom;i++){
            javax.swing.table.TableColumn tbc=tb.getColumnModel().getColumn(i);
            tbc.setPreferredWidth(lebar[i]);
            tb.setRowHeight(18);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblcus = new javax.swing.JTable();
        btnsrch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        txtReportBy = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtRegNo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPolicyNo = new javax.swing.JTextField();
        dtLos1 = new com.toedter.calendar.JDateChooser();
        dtLos2 = new com.toedter.calendar.JDateChooser();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtSttClaim = new javax.swing.JTextField();
        dtReg1 = new com.toedter.calendar.JDateChooser();
        dtReg2 = new com.toedter.calendar.JDateChooser();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        cbBranch = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        cbCob = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search Claim Registration");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Claim Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Calibri", 0, 11));
        jPanel1.setLayout(null);

        jScrollPane1.setAutoscrolls(true);

        tblcus.setAutoCreateRowSorter(true);
        tblcus.setFont(tblcus.getFont().deriveFont((float)11));
        tblcus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblcus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblcus.setDoubleBuffered(true);
        tblcus.setFillsViewportHeight(true);
        tblcus.setMaximumSize(new java.awt.Dimension(2147483647, 72));
        tblcus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblcus);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(17, 78, 990, 290);

        btnsrch.setFont(btnsrch.getFont().deriveFont(btnsrch.getFont().getStyle() | java.awt.Font.BOLD, 11));
        btnsrch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1245117595_001_37.png"))); // NOI18N
        btnsrch.setText("Search Claim");
        btnsrch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsrchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnsrchMouseEntered(evt);
            }
        });
        btnsrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsrchActionPerformed(evt);
            }
        });
        jPanel1.add(btnsrch);
        btnsrch.setBounds(837, 38, 170, 24);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(80, 80));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1700, 40));
        jPanel2.setLayout(null);

        txtReportBy.setFont(txtReportBy.getFont().deriveFont((float)11));
        jPanel2.add(txtReportBy);
        txtReportBy.setBounds(570, 10, 140, 24);

        txtNama.setFont(txtNama.getFont().deriveFont((float)11));
        jPanel2.add(txtNama);
        txtNama.setBounds(410, 10, 150, 24);

        jLabel5.setFont(jLabel5.getFont().deriveFont((float)11));
        jLabel5.setText("Insured Nama");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(410, 0, 80, 10);

        jLabel6.setFont(jLabel6.getFont().deriveFont((float)11));
        jLabel6.setText("Branch");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(10, 0, 80, 10);

        jLabel7.setFont(jLabel7.getFont().deriveFont((float)11));
        jLabel7.setText("CoB");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(210, 0, 80, 10);

        jLabel8.setFont(jLabel8.getFont().deriveFont((float)11));
        jLabel8.setText("Reported by");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(570, 0, 80, 10);

        jLabel9.setFont(jLabel9.getFont().deriveFont((float)11));
        jLabel9.setText("Policy No");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(1540, 0, 110, 10);

        txtRegNo.setFont(txtRegNo.getFont().deriveFont((float)11));
        jPanel2.add(txtRegNo);
        txtRegNo.setBounds(1370, 10, 160, 24);

        jLabel10.setFont(jLabel10.getFont().deriveFont((float)11));
        jLabel10.setText("Registration No");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(1370, 0, 110, 10);

        txtPolicyNo.setFont(txtPolicyNo.getFont().deriveFont((float)11));
        jPanel2.add(txtPolicyNo);
        txtPolicyNo.setBounds(1540, 10, 130, 24);

        dtLos1.setDateFormatString("dd/MM/yyyy");
        dtLos1.setFont(dtLos1.getFont().deriveFont((float)11));
        jPanel2.add(dtLos1);
        dtLos1.setBounds(1120, 10, 120, 24);

        dtLos2.setDateFormatString("dd/MM/yyyy");
        dtLos2.setFont(dtLos2.getFont().deriveFont((float)11));
        jPanel2.add(dtLos2);
        dtLos2.setBounds(1240, 10, 120, 24);

        jLabel55.setFont(jLabel55.getFont().deriveFont((float)11));
        jLabel55.setText("Date of Loss Start");
        jPanel2.add(jLabel55);
        jLabel55.setBounds(1120, 0, 110, 10);

        jLabel56.setFont(jLabel56.getFont().deriveFont((float)11));
        jLabel56.setText("Date of Loss End");
        jPanel2.add(jLabel56);
        jLabel56.setBounds(1240, 0, 120, 10);

        jLabel11.setFont(jLabel11.getFont().deriveFont((float)11));
        jLabel11.setText("Status Claim");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(720, 0, 110, 10);

        txtSttClaim.setFont(txtSttClaim.getFont().deriveFont((float)11));
        jPanel2.add(txtSttClaim);
        txtSttClaim.setBounds(720, 10, 140, 24);

        dtReg1.setDateFormatString("dd/MM/yyyy");
        dtReg1.setFont(dtReg1.getFont().deriveFont((float)11));
        jPanel2.add(dtReg1);
        dtReg1.setBounds(870, 10, 120, 24);

        dtReg2.setDateFormatString("dd/MM/yyyy");
        dtReg2.setFont(dtReg2.getFont().deriveFont((float)11));
        jPanel2.add(dtReg2);
        dtReg2.setBounds(990, 10, 120, 24);

        jLabel57.setFont(jLabel57.getFont().deriveFont((float)11));
        jLabel57.setText("Registered Start");
        jPanel2.add(jLabel57);
        jLabel57.setBounds(870, 0, 80, 10);

        jLabel58.setFont(jLabel58.getFont().deriveFont((float)11));
        jLabel58.setText("Registered End");
        jPanel2.add(jLabel58);
        jLabel58.setBounds(990, 0, 80, 10);

        jPanel2.add(cbBranch);
        cbBranch.setBounds(10, 10, 170, 24);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(180, 10, 20, 23);

        jPanel2.add(cbCob);
        cbCob.setBounds(210, 10, 170, 24);

        jButton3.setText("jButton1");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(380, 10, 20, 23);

        jScrollPane2.setViewportView(jPanel2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 20, 790, 60);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1023, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private static String Lstart=null,Lend=null,Rstart=null,Rend=null;
    private void btnsrchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsrchMouseClicked
        
    }//GEN-LAST:event_btnsrchMouseClicked

    @SuppressWarnings("static-access")
    private void tblcusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcusMouseClicked
        // TODO add your handling code here:
//        ccasw_CusProfileData CEDE=new ccasw_CusProfileData();
//        CEDE.setVisible(true);
        if(tabcus.getRowCount()!=0){
            if(evt.getClickCount()==2){
                try{
//                    switch (Form){
//                        case 1:

    //                        Tic.txtNoPolis.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),0));
    //                        Tic.txtcusnam.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),4));
    //                        Tic.txtcustadd.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),5));
    //                        Tic.txtcusfax.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),6));
    //                        Tic.txtEmail.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),7));
    //                        Tic.txtTowName.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),14));
    //                        Tic.txtTowPho.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),15));
    //                        Tic.txtTowMail.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),16));
    //                        Tic.contid=Integer.parseInt((String)tblcus.getValueAt(tblcus.getSelectedRow(),20));
    //
    //                        Tic.showcus();
//                            Inc.IdCust=((String)tblcus.getValueAt(tblcus.getSelectedRow(),tblcus.getTableHeader().getColumnModel().getColumnIndex("Client ID")));
//                            Inc.txtIdCust.setText((String)tblcus.getValueAt(tblcus.getSelectedRow(),tblcus.getTableHeader().getColumnModel().getColumnIndex("Client ID")));
//                            Inc.tabeltic();
//                            break;
//                        case 2:
                            sql1 = "insert into ws_request set request_time=CURRENT_TIMESTAMP "
                                    + ",username='" + CCanj.lbluser.getText() + "'"
                                    + ",function_id=5"
                                    + ",ws_params='"+(String)tblcus.getValueAt(tblcus.getSelectedRow(),tblcus.getTableHeader().getColumnModel().getColumnIndex("Client ID"))+"'"
                                    + "";
                            CCanj.jconn.SQLExecute(sql1, CCanj.conn);
                            sqlid = "select distinct last_insert_id() from ws_request";
                            rs = CCanj.jconn.SQLExecuteRS(sqlid, CCanj.conn);
                            while (rs.next()) {
                                wsid1 = Integer.parseInt(rs.getString(1));
                                ws1 = true;
                            }
                            System.out.println("\n wsid1 scr : "+wsid1);
//                            if(ws=true){
//                                wsws.start();
//                            }
                            ccasw_Police_Detail PODE=new ccasw_Police_Detail();
                            PODE.setVisible(true);
                            PODE.wsid=wsid1;
                            PODE.Form=Form;
                            if(ws1=true){
                                PODE.ws=ws1;
                                PODE.wsid=wsid1;
                            }
//                            break;
//                        case 3:
//                            break;
//                        case 4:
//                            break;
//                    }
                }catch (SQLException ex) {
                    Logger.getLogger(ccasw_Search_Claim.class.getName()).log(Level.SEVERE, null, ex);
                }
//                dispose();
            }
        }
    }//GEN-LAST:event_tblcusMouseClicked

    private void btnsrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsrchActionPerformed
        // TODO add your handling code here:
        try {
            getbranch();getcob();
            Date dt3 =dtReg1.getDate();Date dt5 =dtLos1.getDate();
            Date dt4 =dtReg2.getDate();Date dt6 =dtLos2.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
            if(dt3!=null){                Rstart = sdf.format(dt3);            }else{                Rstart = "";            }
            if(dt4!=null){                Rend = sdf.format(dt4);            }else{                Rend = "";            }
            if(dt5!=null){                Lstart = sdf.format(dt5);            }else{                Lstart = "";            }
            if(dt6!=null){                Lend = sdf.format(dt6);            }else{                Lend = "";            }
            // TODO add your handling code here:
            sql1 = "insert into ws_request set request_time=CURRENT_TIMESTAMP "
                    + ",username='" + CCanj.lbluser.getText() + "'"
                    + ",function_id=9"
                    + ",ws_params='" + branchid + "|" + cobid + "|" + txtNama.getText() + "|" + txtReportBy.getText() + "|" + txtSttClaim.getText() + ""
                    + "|" + Rstart + "|" + Rend + "|" + Lstart + "|" + Lend + "|" + txtRegNo.getText() + "|" + txtPolicyNo.getText() + "'"
                    + "";
            CCanj.jconn.SQLExecute(sql1, CCanj.conn);
            sqlid = "select distinct last_insert_id() from ws_request";
            rs = CCanj.jconn.SQLExecuteRS(sqlid, CCanj.conn);
            while (rs.next()) {
                wsid = Integer.parseInt(rs.getString(1));
                ws = true;
            }
            System.out.println("\n wsid : "+wsid);
            request();
        } catch (SQLException ex) {
            Logger.getLogger(ccasw_Search_Claim.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsrchActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        wsws.stop();
    }//GEN-LAST:event_formWindowClosed

    private void btnsrchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsrchMouseEntered
        // TODO add your handling code here:
//        if(dtLos1.getDate()!=null&&dtLos2.getDate()==null){
//            JOptionPane.showMessageDialog(null, "Lost End date cannot be empty","Error!!!",JOptionPane.WARNING_MESSAGE);
//        }else if(dtLos1.getDate()==null&&dtLos2.getDate()!=null){
//            JOptionPane.showMessageDialog(null, "Lost Start date cannot be empty","Error!!!",JOptionPane.WARNING_MESSAGE);
//        }
//        if(dtReg1.getDate()!=null&&dtReg2.getDate()==null){
//            JOptionPane.showMessageDialog(null, "Registration End date cannot be empty","Error!!!",JOptionPane.WARNING_MESSAGE);
//        }else if(dtReg1.getDate()==null&&dtReg2.getDate()!=null){
//            JOptionPane.showMessageDialog(null, "Registration Start date cannot be empty","Error!!!",JOptionPane.WARNING_MESSAGE);
//        }
    }//GEN-LAST:event_btnsrchMouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cbBranch.setSelectedIndex(-1);
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        cbCob.setSelectedIndex(-1);
}//GEN-LAST:event_jButton3ActionPerformed

   
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ccasw_Search_Claim().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnsrch;
    private javax.swing.JComboBox cbBranch;
    private javax.swing.JComboBox cbCob;
    public static com.toedter.calendar.JDateChooser dtLos1;
    public static com.toedter.calendar.JDateChooser dtLos2;
    public static com.toedter.calendar.JDateChooser dtReg1;
    public static com.toedter.calendar.JDateChooser dtReg2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblcus;
    public static javax.swing.JTextField txtNama;
    public static javax.swing.JTextField txtPolicyNo;
    public static javax.swing.JTextField txtRegNo;
    public static javax.swing.JTextField txtReportBy;
    public static javax.swing.JTextField txtSttClaim;
    // End of variables declaration//GEN-END:variables

    private static String sql,sql1,sqlid;
    private static ResultSet rs,rs1;

    Action wsinbound = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            webservice();
        }
    };

    private void webservice(){
        try{
            sql="select ws_status from ws_request where request_id="+wsid+" ";
            rs1=CCanj.jconn.SQLExecuteRS(sql, CCanj.conn);
            while(rs1.next()){
                wsstt=Integer.parseInt(rs1.getString(1));
            }
            System.out.println("\n status ws : "+wsstt);
            process();
            if(wsstt==2){
                tabelcus();
                wsws.stop();
                Prg.dialog.hide();btnsrch.setEnabled(true);
            }else if(wsstt==3){
                wsws.stop();
                JOptionPane.showMessageDialog(null, "Data not found","Error!!!",JOptionPane.WARNING_MESSAGE);
                Prg.dialog.hide();btnsrch.setEnabled(true);
            }
        }catch(Exception exc){
            System.err.println(exc.getMessage());
        }
    }
    public void request(){
        if(ws=true&&wsid!=-1){
            Prg.value=0;
            wsws.start();
//            dialog.show();
            Prg.dialog.show();
            Prg.pasw.setValue(0);
        }
    }
    public void process(){
        Prg.value=Prg.pasw.getValue() + 10;
        if(Prg.value ==100){
            Prg.value=0;
        }
        Prg.pasw.setValue(Prg.value);
        if(Prg.dialog.isShowing()==false){
            wsws.stop();btnsrch.setEnabled(true);
        }
    }
    private void branch(){
        cbBranch.removeAllItems();
        try{
            sql="select name from _ws_branch ";
            rs=CCanj.jconn.SQLExecuteRS(sql,CCanj.conn);
            while(rs.next()){
                cbBranch.addItem(rs.getString(1));
            }
            cbBranch.setSelectedIndex(-1);
        }catch(Exception e){
            System.out.println(e);
        }
    }
    private void getbranch(){
        branchid="";
        try{
            sql="select branch_id from _ws_branch where name='"+cbBranch.getSelectedItem()+"'";
            rs=CCanj.jconn.SQLExecuteRS(sql,CCanj.conn);
            while(rs.next()){
                branchid=(rs.getString(1).toString());
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }
    private void cob(){
        cbCob.removeAllItems();
        try{
            sql="select name from _ws_cob where parent_bsn_id != 0 order by name ";
            rs=CCanj.jconn.SQLExecuteRS(sql,CCanj.conn);
            while(rs.next()){
                cbCob.addItem(rs.getString(1));
            }
            cbCob.setSelectedIndex(-1);
        }catch(Exception e){
            System.out.println(e);
        }
    }
    private void getcob(){
        cobid="";
        try{
            sql="select bsn_id from _ws_cob where name='"+cbCob.getSelectedItem()+"'";
            rs=CCanj.jconn.SQLExecuteRS(sql,CCanj.conn);
            while(rs.next()){
                cobid=(rs.getString(1).toString());
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }
}
